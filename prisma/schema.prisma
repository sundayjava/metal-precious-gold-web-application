generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  price          Float
  discount       Float?
  sku            String
  productYear    String?
  percent        Float?
  quantity       Int
  parentcategory String?
  childcategory  String?
  subcategory    String?
  overview       String?
  mintmark       String?
  thickness      Float
  purity         String?
  weight         Float?
  weightoz       Float?
  diameter       Float?
  length         Float?
  width          Float?
  history        String?
  cartItems      CartItem[]
  imageUrl       String[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  OrderItem      OrderItem[]
}

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  firstname    String
  lastname     String
  email        String
  cart         Cart?
  phoneNumber  String?
  address      String?
  street       String?
  streetNumber String?
  door         String?
  postalcode   String?
  city         String?
  country      String?
  Order        Order?
}

model Payment {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  file   String
}

model CartItem {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  cart            Cart    @relation(fields: [cartId], references: [id])
  cartId          String  @db.ObjectId
  product         Product @relation(fields: [productId], references: [id])
  productId       String  @db.ObjectId
  quantity        Int
  price           Float
  discountedPrice Float
  userId          String
}

model Cart {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  user       User       @relation(fields: [userId], references: [id])
  userId     String     @unique @db.ObjectId
  cartItems  CartItem[]
  totalPrice Float?
  totalItem  Int?
  discount   Float?
  percent    Int?
}

model OrderItem {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  order           Order    @relation(fields: [orderId], references: [id])
  orderId         String   @db.ObjectId
  product         Product  @relation(fields: [productId], references: [id])
  productId       String   @db.ObjectId
  quantity        Int
  price           Float?
  discountedPrice Float?
  userId          String
  deliveryDate    DateTime
}

model Order {
  id                   String      @id @default(auto()) @map("_id") @db.ObjectId
  user                 User        @relation(fields: [userId], references: [id])
  userId               String      @unique @db.ObjectId
  orderItems           OrderItem[]
  orderDate            DateTime
  deliveryDate         DateTime?
  totalPrice           Float
  totalDiscountedPrice Float?
  discount             Float?
  orderStatus          String
  totalItem            Int
}
